continue
params
continue
params
continue
params
continue
params
continue
params
continue
params
continue
 params[:result]
params
continue
params
continue
params
continue
params[:result]
params
continue
result
@result
params
continue
@result.blank?
@result
continue
@result
continue
@result
continue
@result
continue
@result
continue
@result
continue
result
@result
@reuslt
continue
@result
result
continue
result
continue
result
continue
params
continue
params
continue
params
pparams
@result
continue
result
@result
params
continue
result
continue
@result
result
continue
result
params
result
continue
@result
continue
@result
continue
@result
continue
@result
continue
params
continue
contnue
continue
contiinue
@book.publisher.name
[
@book.publisher
@book
continue
names
author_display = "by " + names.join(", ")
author_display = "by " + names.joins(", ")
names = authors.map(&:full_name)
authors.map(&:full_name)
continue
authors.map(%:full_name)
[A[B
authors.map(&:full_name)
authors.map(%:full_name)
authors.map(%full_name)
authors.pluck(:first_name)
authors.pluck(:full_names)
author.pluck(:full_name)
authors.ids
authors.first_name
authors.full_name
names = authors.select { |author| author.full_name }
authors
continue
authors
names
names = authors.select { |author| author.full_name }
authors.select { |author| author.full_name }
[A
author_names[]
 authors.each { |author| author_names << author.full_name }
exit
authors.first.full_name
authors.first
authors.each { |author| author_names << author.full_name }
authors
authors.each { |author| author_names << author.full_name }
author_names
author_names = authors.each { |author| author.full_name }
authors.each { |author| author.full_name }
author.each { |author| author.full_name }
exit
authors.first.full_name
authors.first
authors
exit
author.each{ |author| author.
authors.count()
authors
continue
@book.authors
@book
@bookk
author_display(@book.authors)
author_display
continue
"https://" + @book.image_url
@book.image_url
continue
<img src= @book.image_url >
@book.image_url
continue
params
flash[:notice]
notice
continue
notice
continue
rcontinue
continue
params
continue
 Book.friendly.find(params[:id])
continue
exit
[
 Book.friendly.find(params[:id])
@book = Book.find(params[:id])
exit
Book.friendly.find(params[:id])
978-1-891830-85-3
params
Book.all
Book.friendly.find(params[:id])
continue
exit
exiit
 @book = Book.friendly.find(params[:id])
ra @book = Book.friendly.find(params[:id])
continue
 redirect_to :search, status: 200
book
exit
 Book.search_by_isbn(formatted_isbn).first
[
 Book.search_by_isbn(formatted_isbn).all
book
book.first
book
book = Book.search_by_isbn(formatted_isbn)
Book.search_by_isbn(formatted_isbn)
exit
exiit
book = Book.search_by_isbn(formatted_isbn)
Book.search_by_isbn(formatted_isbn)
continue
formatted_isbn == "1-891-83085-6"
formatted_isbn
 Book.search_by_isbn(formatted_isbn)
Book.all
book = Book.search_by_isbn(formatted_isbn)
book
Book.search_by_isbn(formatted_isbn)
continue
Book.search_by_isbn(formatted_isbn)
 Book.find_by(isbn_13: formatted_isbn)
formatted_isbn
 Book.search_by_isbn(formatted_isbn)
book
book = Book.search_by_isbn(formatted_isbn)
exit
Book.last
formatted_isbn
Book.find_by(isbn_13: formatted_isbn)
formatted_isbn
book
book = Book.search_by_isbn(formatted_isbn)
Book.search_by_isbn(formatted_isbn)
continue
notice
continue
flash.now[:alert] = "ISBN not valid"
continue
flash.now[:alert] = "ISBN not valid"
continue
 helpers.valid_isbn?(params[:search_query])
continue
helpers.valid_isbn?(params[:search_query])
helpers.valid_isbn?
helpers
helper.valid_isbn?
helper
params[:search_query]
params
continue
isbn_array.each_with_index do |number, index|             if index == 0 || index.even?                 total += number.to_i * 1             else                 total += number.to_i * 3             end         end
isbn_array.each_with_index do |number, index|
total = 0
isbn_array = trimmed_isbn.split("")
trimmed_isbn = isbn_13.delete('^0-9')
continue
( remainder == 0 ? true : false )
remainder = total % 11
total
isbn_array.each_with_index { |number, index| total += (10 - index) * number.to_i }
total = 0
isbn_array = trimmed_isbn.split("")
trimmed_isbn = isbn_10.delete('^0-9')
exit
reload!
reload
IsbnValidator.valid_isbn?(isbn_10)
isbn_10
exit
IsbnValidator
valid_isbn?
helper
exit
params
continue
